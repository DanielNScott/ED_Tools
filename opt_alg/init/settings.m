%==========================================================================================%
% This file defines the variables needed to control 'optimize_ed'.                         %
% There are two 'optimization' algorithms:                                                 %
% 'DRAM': Adaptive Metropolis Hastings with Delayed Rejection                              %
%   'SA': Simulated Annealing                                                              %
%  'PSO': Canonical Particle Swarm Optimization                                            %
%==========================================================================================%
% Options for both testing the algorithm and optimizing ED follow...
%
% Options for the 'model' field:
%  - ED2.1           Runs the ED model.
%  - Rosenbrock      Runs an optimization on the coupled general Rosenbrock Function
%  - out.mat         Runs using an out.mat file as ED output. (Use 1 iter...)
%  - read_dir        Runs using a specified directory to obtain ED output. (Use 1 iter...)
%------------------------------------------------------------------------------------------%
model          = 'out.mat';      % See note above.
prior_pdf      = 'uniform';      % Prior pdfs can be gaussian, uniform, or gammas.
opt_type       = 'PSO';          % Optimization type can be DRAM, SA, PSO
niter          = 1;              % Number of iterations for MCMC alg.
adapt_freq     = 100;            % Freq @ which to adapt covar. matrix
verbose        = 0;              % Verbosity: -1=>Silent, 0=>Progress Ind, 1=>Debug
multiplier     = 1.00;           % Multiplicative factor applied to initial parameters.
%------------------------------------------------------------------------------------------%


%------------------------------------------------------------------------------------------%
%                           SA Specific Parameters                                         %
% These all must be set, but won't do anything if the model is not running SA.             %
% Note: For geometric cooling sched. temp = mantissa ^ (-iter/niter * exp_mult)            %
%------------------------------------------------------------------------------------------%
acc_crit   = 'Boltzmann';   % Acceptance Criteria: Boltzmann (Default), Sq_Decay, Log_Decay 
cool_sched = 'Geometric';   % Cooling Schedule: Geometric, Linear, or Logarithmic
temp_start = 800;           % Starting Temperature of SA (1k max)
mantissa   = 6;             % See note above. Default to 4.
exp_mult   = 2;             % See note above. Default to 2.
%------------------------------------------------------------------------------------------%


%------------------------------------------------------------------------------------------%
%                          DRAM Specific Parameters                                        %
% These all must be set, but won't do anything if the model is not running DRAM.           %
%------------------------------------------------------------------------------------------%
ndr = 1;                      % Max # delayed rejection steps. 1 or 2
%------------------------------------------------------------------------------------------%



%------------------------------------------------------------------------------------------%
%                          PSO Specific Parameters                                         %
% These all must be set, but won't do anything if the model is not running PSO.            %
%------------------------------------------------------------------------------------------%
nps   = 20;                   % Number of particles, i.e. simultaneous ED runs.
phi_1 = 4.1;                  % Governs strength of attractor at local best
phi_2 = 4.1;                  % Governs strength of attractor at neighbors' best
top   = 'Von Neumann';        % Topology. Currently only Von-Neumann supported.
%------------------------------------------------------------------------------------------%



%------------------------------------------------------------------------------------------%
% General I/O Settings:                                                                    %
%  - rundir (the directory where this file should be) is assumed to have a subdirectory    %
%    titled 'analy' in which the model's output can be found.                              %
%  - opt_data_dir is the directory holding data we want to optimize against. (ED2.1 only)  %
%------------------------------------------------------------------------------------------%
%rundir = '/n/moorcroftfs2/dscott/runfiles/ED_DS/HFF_Fast/';
rundir = 'C:\Users\Dan\Moorcroft_Lab\ED_Output\ml-DS\hfs_15\';

%opt_data_dir = '/n/moorcroftfs2/dscott/data/USHa_HFDA/';
opt_data_dir = 'C:\Users\Dan\Moorcroft_Lab\Data\USHa_HFDA_Iso\';
%------------------------------------------------------------------------------------------%


%------------------------------------------------------------------------------------------%
% ED specific options... (Ignore if you're running a toy problem)                          %
% These do get used if model = 'out.mat' or 'read_dir'.                                    %
%                                                                                          %
% This specifies what data to use in the optimization. The optimizer will attempt to use   %
% as much of the data read from files in the optimization data directory specified below,  %
% excepting a 6-month spinup period.                                                       %
% For example, if the run is from 6/01/06 to 9/01/07 it will attempt                       %
%                                                                                          %
% NOTE: the names to the right MUST match column headers in CSV's in the data dir.         %
% Also, this get's TRIMMED IMMEDIATELY to those rows with vals 1 in the "Use This?" col.   %
%------------------------------------------------------------------------------------------%
opt_metadata = ...
...  Res    , Data Name  , Type  ,  Field from 'import_poly'   ,  Rework? Use?
{  'hourly' , 'NEE'      , 'flx' , '.X.FMEAN_NEE'              ,     1,     1; ...
   'hourly' , 'NEE_Night', 'flx' , '.X.FMEAN_NEE_Night'        ,     1,     1; ...
   'hourly' , 'NEE_Day'  , 'flx' , '.X.FMEAN_NEE_Day'          ,     1,     1; ...
   ...
   'hourly' , 'Latent'   , 'flx' , '.X.FMEAN_VAPOR_CA_PY'      ,     0,     0; ...
   ...
   'hourly' , 'NEE_Iso'  , 'flx' , '.X.FMEAN_NEE_ISOFLX'       ,     1,     1; ...
   'hourly' ,'NEE_Iso_Day', 'flx' , '.X.FMEAN_NEE_ISOFLX_Night',     1,     1; ...
  'hourly','NEE_Iso_Night', 'flx' , '.X.FMEAN_NEE_ISOFLX_Day'  ,     1,     1; ...
   ...
   'daily'  , 'NEE'      , 'flx' , '.X.DMEAN_NEE'              ,     1,     1; ...
   'daily'  , 'NEE_Night', 'flx' , '.X.DMEAN_NEE_Night'        ,     0,     0; ...
   'daily'  , 'NEE_Day'  , 'flx' , '.X.DMEAN_NEE_Day'          ,     0,     0; ...   % DNE
   ...
   'daily'  , 'NEE_Iso'  , 'flx' , '.X.DMEAN_NEE_ISOFLX'       ,     1,     1; ...
   ...
   'monthly', 'NEE'      , 'flx' , '.X.MMEAN_NEE'              ,     1,     1; ...
   'monthly', 'NEE_Night', 'flx' , '.X.MMEAN_NEE_Night'        ,     0,     0; ...
   'monthly', 'NEE_Day'  , 'flx' , '.X.MMEAN_NEE_Day'          ,     0,     0; ...   % DNE
   ...
   'monthly', 'Latent'   , 'flx' , '.X.MMEAN_VAPOR_CA_PY'      ,     0,     0; ...
   'monthly', 'Sens'     , 'flx' , '.X.MMEAN_SENSIBLE_CA_PY'   ,     0,     0; ...
   ...
   'monthly', 'NEE_Iso'  , 'flx' , '.X.MMEAN_NEE_ISOFLX'       ,     1,     1; ...
   ...
   'yearly', 'NEE'      , 'flx' , '.X.YMEAN_NEE'               ,     1,     1; ...
   'yearly', 'NEE_Night', 'flx' , '.X.YMEAN_NEE_Night'         ,     0,     0; ...
   'yearly', 'NEE_Day'  , 'flx' , '.X.YMEAN_NEE_Day'           ,     0,     0; ...   % DNE
   ...
   'yearly', 'Latent'   , 'flx' , '.X.YMEAN_VAPOR_CA_PY'       ,     0,     0; ...
   'yearly', 'Sens'     , 'flx' , '.X.YMEAN_SENSIBLE_CA_PY'    ,     0,     0; ...
   ...
   'yearly', 'NEE_Iso'  , 'flx' , '.X.YMEAN_NEE_ISOFLX'        ,     1,     1; ...
   ...
   'yearly', 'BA'       , 'FIA' , '.X.YMEAN_BA'                ,     0,     0; ...
   'yearly', 'BA_Hw'    , 'FIA' , '.X.YMEAN_BA_HW'             ,     0,     0; ...
   'yearly', 'BA_Co'    , 'FIA' , '.X.YMEAN_BA_CO'             ,     0,     0; ...
   ...
   'yearly', 'BAI'      , 'FIA' , ''                           ,     0,     0; ...   % DNE
   'yearly', 'BAI_Hw'   , 'FIA' , ''                           ,     0,     0; ...   % DNE
   'yearly', 'BAI_Co'   , 'FIA' , ''                           ,     0,     0; ...   % DNE
   ...
   'yearly', 'BAG'      , 'FIA' , '.T.BASAL_AREA_GROWTH'       ,     0,     0; ...
   'yearly', 'BAG_Hw'   , 'FIA' , '.H.BASAL_AREA_GROWTH'       ,     0,     0; ...
   'yearly', 'BAG_Co'   , 'FIA' , '.C.BASAL_AREA_GROWTH'       ,     0,     0; ...
   ...
   'yearly', 'BAM'      , 'FIA' , '.T.BASAL_AREA_MORT'         ,     0,     0; ...
   'yearly', 'BAM_Hw'   , 'FIA' , '.H.BASAL_AREA_MORT'         ,     0,     0; ...
   'yearly', 'BAM_Co'   , 'FIA' , '.C.BASAL_AREA_MORT'         ,     0,     0; ...
   ...
   'yearly', 'BAR'      , 'FIA' , '.T.TOTAL_BASAL_AREA_REC'    ,     0,     0; ...   % DNE
   'yearly', 'BAR_Hw'   , 'FIA' , '.H.TOTAL_BASAL_AREA_REC'    ,     0,     0; ...   % DNE
   'yearly', 'BAR_Co'   , 'FIA' , '.C.TOTAL_BASAL_AREA_REC'    ,     0,     0; ...   % DNE
  };

% Filenames for observational data
% Note: Using an hourly data file trimmed to the appropriate years may save a lot of time.
data_fnames.yr_FIA  = 'yearly_FIA_stats.csv';
data_fnames.yr_flx  = 'yearly_flux_stats_filled.csv';
data_fnames.mo_flx  = 'monthly_flux_stats_filled.csv';
data_fnames.day_flx = 'daily_flux_stats_filled.csv';
data_fnames.hr_flx  = 'hourly_flux_stats_filled_09_12.csv';

% Set which pfts are found in params below, what to multiply all sdevs by.
pfts = [6,7,8,9,10,11];

% Structure defining which params to optimized, their prior means and prior standard
% deviations, and the pfts to apply each instance of the parameter to.
params = { ...
...% Parameter Name           ,  Tag              ,  PFTS    ,  Mean ,  Sdev ,Bounds, Mask
   'vmfact_co'                , 'pft'             , [6,7,8]  , 1.0000, 0.2000, [0,3], 1;...
   'q'                        , 'pft'             , [6,7,8]  , 0.3463, 0.3000, [0,3], 1 ; ...
   'growth_resp_factor'       , 'pft'             , [6,7,8]  , 0.3330, 0.1600, [0,1], 1 ; ...
...
   'vmfact_hw'                , 'pft'             , [9,10,11], 1.0000, 0.2000, [0,3], 1 ; ...
   'q'                        , 'pft'             , [9,10,11], 1.1274, 0.5000, [0,3], 1 ; ...
   'storage_turnover_rate'    , 'pft'             , [9,10,11], 0.6200, 0.3000, [0,1], 1 ; ...
...
   'stomatal_slope'           , 'pft'             , [6:11]   , 0.6400, 0.3000, [0,  6], 1 ; ...
   'Vm_low_temp'              , 'pft'             , [6:11]   , 4.7137, 2.5000, [0, 40], 1 ; ...
   'root_turnover_rate'       , 'pft'             , [6:11]   , 5.1000, 2.5000, [0,  5], 1 ; ...
   'water_conductance'        , 'pft'             , [6:11]   , 150.00, 100.00, [0,400], 1 ; ...
   'resp_opt_water'           , 'decomposition'   , []       , 0.8900, 0.4000, [0,  1], 1 ; ...
   'resp_temperature_increase', 'decomposition'   , []       , 2.1300, 1.0000, [0,  5], 1 ; ... % *
   'resp_water_below_opt'     , 'decomposition'   , []       , 5.1000, 2.5000, [0, 10], 1 ; ... % *
   'resp_water_above_opt'     , 'decomposition'   , []       , 4.5000, 2.0000, [0, 10], 1 ; ... % *
...
... % Not In Mevigy '09
   'Vm0'                      , 'pft'             , [6,7,8]  , 0.7300, 0.4000, [0,0], 0 ; ...
   'Vm_q10'                   , 'pft'             , [6,7,8]  , 2.2000, 1.1000, [0,0], 0 ; ...
   'Vm_low_temp'              , 'pft'             , [6,7,8]  , 4.7137, 2.5000, [0,0], 0 ; ...
   'root_respiration_factor'  , 'pft'             , [6,7,8]  , 1.0000, 0.5000, [0,0], 0 ; ...
   'dark_respiration_factor'  , 'pft'             , [6,7,8]  , 0.0150, 0.0075, [0,0], 0 ; ...
   'quantum_efficiency'       , 'pft'             , [6,7,8]  , 0.0800, 0.0400, [0,0], 0 ; ...
   'd0'                       , 'pft'             , [6,7,8]  , 0.0100, 0.0050, [0,0], 0 ; ...
   'mort1'                    , 'pft'             , [6,7,8]  , 1.0000, 0.5000, [0,0], 0 ; ...
   'stomatal_slope'           , 'pft'             , [6,7,8]  , 0.6400, 0.3000, [0,0], 0 ; ...
   'root_turnover_rate'       , 'pft'             , [6,7,8]  , 3.9270, 2.0000, [0,0], 0 ; ...
   'water_conductance'        , 'pft'             , [6,7,8]  , 300.00, 100.00, [0,0], 0 ; ...
...
   'Vm0'                      , 'pft'             , [9,10,11], 1.1000, 0.6000, [0,0], 0 ; ...
   'Vm_q10'                   , 'pft'             , [9,10,11], 2.2000, 1.1000, [0,0], 0 ; ...
   'Vm_low_temp'              , 'pft'             , [9,10,11], 4.7137, 2.5000, [0,0], 0 ; ...
   'root_respiration_factor'  , 'pft'             , [9,10,11], 1.0000, 0.5000, [0,0], 0 ; ...
   'dark_respiration_factor'  , 'pft'             , [9,10,11], 0.0150, 0.0075, [0,0], 0 ; ...
   'quantum_efficiency'       , 'pft'             , [9,10,11], 0.0800, 0.0400, [0,0], 0 ; ...
   'd0'                       , 'pft'             , [9,10,11], 0.0100, 0.0050, [0,0], 0 ; ...
   'mort1'                    , 'pft'             , [9,10,11], 1.0000, 0.5000, [0,0], 0 ; ...
   'stomatal_slope'           , 'pft'             , [9,10,11], 0.6400, 0.3000, [0,0], 0 ; ...
   'root_turnover_rate'       , 'pft'             , [9,10,11], 5.0837, 2.5000, [0,0], 0 ; ...
   'water_conductance'        , 'pft'             , [9,10,11], 300.00, 100.00, [0,0], 0 ; ...
   'growth_resp_factor'       , 'pft'             , [9,10,11], 0.4500, 0.2000, [0,0], 0 ; ...
};

% (*) decomp_scheme 0,1
%------------------------------------------------------------------------------------------%



%------------------------------------------------------------------------------------------%
% Test specific options, these do nothing with model = 'ED2.1'                             %
%------------------------------------------------------------------------------------------%
if strcmp(model,'Rosenbrock')
   params = {... Name  ,   Initial Value  ,  Sdev,    Rng, Msk
                  'x1' , (rand() - 0.5) *6,  0.5 , [-3,3], 1; ...
                  'x2' , (rand() - 0.5) *6,  0.5 , [-3,3], 1; ...
            };
end
%------------------------------------------------------------------------------------------%

%==========================================================================================%
